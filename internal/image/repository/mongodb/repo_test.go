package mongodb

import (
	"context"
	"fmt"
	"log"
	"os"
	"testing"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ory/dockertest/v3"
	"github.com/ory/dockertest/v3/docker"
	"github.com/stretchr/testify/assert"
	"go.mongodb.org/mongo-driver/bson/primitive"
	"go.mongodb.org/mongo-driver/mongo"
	"go.mongodb.org/mongo-driver/mongo/options"

	"image-api/internal/domain"
	"image-api/pkg/errors"
)

var db *mongo.Client
var testImageHex = ""
var testMetadata = map[string]interface{}{
	"height":     "332",
	"image_type": "image/jpeg",
	"width":      "500",
}

const MONGO_INITDB_ROOT_USERNAME = "root"
const MONGO_INITDB_ROOT_PASSWORD = "password"

func TestMain(m *testing.M) {
	// Setup
	pool, err := dockertest.NewPool("")
	if err != nil {
		log.Fatalf("Could not connect to docker: %s", err)
	}
	environmentVariables := []string{
		"MONGO_INITDB_ROOT_USERNAME=" + MONGO_INITDB_ROOT_USERNAME,
		"MONGO_INITDB_ROOT_PASSWORD=" + MONGO_INITDB_ROOT_PASSWORD,
	}
	resource, err := pool.RunWithOptions(&dockertest.RunOptions{
		Repository: "mongo",
		Tag:        "5.0",
		Env:        environmentVariables,
	}, func(config *docker.HostConfig) {
		config.AutoRemove = true
		config.RestartPolicy = docker.RestartPolicy{
			Name: "no",
		}
	})
	if err != nil {
		log.Fatalf("Could not start resource: %s", err)
	}
	err = pool.Retry(func() error {
		var err error
		db, err = mongo.Connect(
			context.TODO(),
			options.Client().ApplyURI(
				fmt.Sprintf("mongodb://%s:%s@localhost:%s", MONGO_INITDB_ROOT_USERNAME, MONGO_INITDB_ROOT_PASSWORD, resource.GetPort("27017/tcp")),
			),
		)
		if err != nil {
			return err
		}
		return db.Ping(context.TODO(), nil)
	})
	if err != nil {
		log.Fatalf("Could not connect to docker: %s", err)
	}

	// Run tests
	exitCode := m.Run()

	// Teardown
	// When you're done, kill and remove the container
	if err = pool.Purge(resource); err != nil {
		log.Fatalf("Could not purge resource: %s", err)
	}

	// Exit
	os.Exit(exitCode)
}

func TestMongoDBRepo_AddGetDelete(t *testing.T) {
	repo, err := NewMongoDBImageRepository(db, "test")
	assert.Nil(t, err)

	id, err := repo.Add(context.Background(), "", "name", domain.Image(common.Hex2Bytes(testImageHex)), testMetadata)
	assert.Nil(t, err)
	assert.NotNil(t, id)

	image, err := repo.Get(context.Background(), id)
	assert.Nil(t, err)
	assert.Equal(t, domain.Image(common.Hex2Bytes(testImageHex)), image)

	err = repo.Delete(context.Background(), id)
	assert.Nil(t, err)

	image, err = repo.Get(context.Background(), id)
	assert.Equal(t, errors.ErrNotFound, err)
	assert.Equal(t, domain.Image(nil), image)

}

func TestMongoDBRepo_AddGetWithID(t *testing.T) {
	repo, err := NewMongoDBImageRepository(db, "test")
	assert.Nil(t, err)

	ObjID := primitive.NewObjectID()
	id, err := repo.Add(context.Background(), ObjID.Hex(), "name", domain.Image(common.Hex2Bytes(testImageHex)), testMetadata)
	assert.Nil(t, err)
	assert.NotNil(t, id)
	assert.Equal(t, ObjID.Hex(), id)

	image, err := repo.Get(context.Background(), id)
	assert.Nil(t, err)
	assert.Equal(t, domain.Image(common.Hex2Bytes(testImageHex)), image)
}

func TestMongoDBRepo_AddWithBadID(t *testing.T) {
	repo, err := NewMongoDBImageRepository(db, "test")
	assert.Nil(t, err)

	id, err := repo.Add(context.Background(), "bad", "name", domain.Image(common.Hex2Bytes(testImageHex)), testMetadata)
	assert.NotNil(t, err)
	assert.Equal(t, errors.ErrBadID, err)
	assert.Equal(t, "", id)
}

func TestMongoDBRepo_GetBadID(t *testing.T) {
	repo, err := NewMongoDBImageRepository(db, "test")
	assert.Nil(t, err)

	id, err := repo.Get(context.Background(), "bad")
	assert.NotNil(t, err)
	assert.Equal(t, errors.ErrBadID, err)
	assert.Equal(t, domain.Image(nil), id)
}

func TestMongoDBRepo_GetNotFound(t *testing.T) {
	repo, err := NewMongoDBImageRepository(db, "test")
	assert.Nil(t, err)

	id, err := repo.Get(context.Background(), primitive.NewObjectID().Hex())
	assert.NotNil(t, err)
	assert.Equal(t, errors.ErrNotFound, err)
	assert.Equal(t, domain.Image(nil), id)
}

func TestMongoDBRepo_DeleteBadID(t *testing.T) {
	repo, err := NewMongoDBImageRepository(db, "test")
	assert.Nil(t, err)

	err = repo.Delete(context.Background(), "bad")
	assert.Equal(t, errors.ErrBadID, err)
}
func TestMongoDBRepo_DeleteNotFound(t *testing.T) {
	repo, err := NewMongoDBImageRepository(db, "test")
	assert.Nil(t, err)

	err = repo.Delete(context.Background(), primitive.NewObjectID().Hex())
	assert.Equal(t, errors.ErrNotFound, err)
}

func TestMongoDBRepo_GetMetadata(t *testing.T) {
	repo, err := NewMongoDBImageRepository(db, "test")
	assert.Nil(t, err)

	id, err := repo.Add(context.Background(), "6290f67ea73fa0eddf89a738", "name", domain.Image(common.Hex2Bytes(testImageHex)), testMetadata)
	assert.Nil(t, err)
	assert.NotNil(t, id)

	metadata, err := repo.GetMetadata(context.Background(), id)
	assert.Nil(t, err)
	assert.NotNil(t, metadata)
}

func TestMongoDBRepo_GetMetadataBadID(t *testing.T) {
	repo, err := NewMongoDBImageRepository(db, "test")
	assert.Nil(t, err)

	metadata, err := repo.GetMetadata(context.Background(), "bad")
	assert.Equal(t, errors.ErrBadID, err)
	assert.Nil(t, metadata)
}
func TestMongoDBRepo_GetMetadataNotFound(t *testing.T) {
	repo, err := NewMongoDBImageRepository(db, "test")
	assert.Nil(t, err)

	metadata, err := repo.GetMetadata(context.Background(), primitive.NewObjectID().Hex())
	assert.Equal(t, errors.ErrNotFound, err)
	assert.Nil(t, metadata)
}

func TestMongoDBRepo_ListAllMetadata(t *testing.T) {
	repo, err := NewMongoDBImageRepository(db, "test2")
	assert.Nil(t, err)

	id, err := repo.Add(context.Background(), "", "name", domain.Image(common.Hex2Bytes(testImageHex)), testMetadata)
	assert.Nil(t, err)
	assert.NotNil(t, id)

	id2, err := repo.Add(context.Background(), "", "name2", domain.Image(common.Hex2Bytes(testImageHex)), testMetadata)
	assert.Nil(t, err)
	assert.NotNil(t, id2)

	metadataList, err := repo.ListAllMetadata(context.Background())
	assert.Nil(t, err)
	assert.NotNil(t, metadataList)
	assert.Len(t, metadataList, 2)

	err = repo.Delete(context.Background(), id)
	assert.Nil(t, err)

	metadataList, err = repo.ListAllMetadata(context.Background())
	assert.Nil(t, err)
	assert.NotNil(t, metadataList)
	assert.Len(t, metadataList, 1)
}
